Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table =10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =10000
ii. Hours =1562(foregin key business_id)
iii. Category =2643 (foregin key business_id)
iv. Attribute =1115 (foregin key business_id)
v. Review =8090 (foregin key business_id)
vi. Checkin = 493 (foregin key business_id)
vii. Photo =6493 (foregin key business_id)
viii. Tip = 3979 (foregin key business_id)
ix. User = 10000 (primary key id)
x. Friend = 11 (foreign key user_id)
xi. Elite_years =2780 (foreign key user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	yes
	
	SQL code used to arrive at answer:
SELECT
  CASE
    WHEN COUNT(*) > 0 THEN 'yes'
    ELSE 'no'
  END AS HasNullValues
FROM User
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT b.city ,count (r.id) as review_count  from 
business b left join review r 
on b.id=r.business_id 
group by b.city order by review_count desc
	
	
	Copy and Paste the Result Below:
        
+-----------------+--------------+
| city            | review_count |
+-----------------+--------------+
| Las Vegas       |          193 |
| Phoenix         |           65 |
| Toronto         |           51 |
| Scottsdale      |           37 |
| Henderson       |           30 |
| Tempe           |           28 |
| Pittsburgh      |           23 |
| Chandler        |           22 |
| Charlotte       |           21 |
| Montréal        |           18 |
| Madison         |           16 |
| Gilbert         |           13 |
| Mesa            |           13 |
| Cleveland       |           12 |
| North Las Vegas |            6 |
| Edinburgh       |            5 |
| Glendale        |            5 |
| Lakewood        |            5 |
| Cave Creek      |            4 |
| Champaign       |            4 |
| Markham         |            4 |
| North York      |            4 |
| Mississauga     |            3 |
| Surprise        |            3 |
| Avondale        |            2 |
+-----------------+--------------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars as star_rating, count(stars) as count
from business
where city='Avon'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:
select stars as star_rating, count(stars) as count
from business
where city='Beachwood'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
select id,name,review_count  from user order by review_count desc limit 3
	
		
	Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+
		


8. Does posting more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
Yes! it seems correlated. Users with more reviews tend to have more fans.
SELECT range AS fans_range, 
       COUNT(*) AS num_user, 
       AVG(review_count) AS avg_num_review,     
       AVG(fans) AS avg_num_fans
FROM (SELECT CASE  
             WHEN fans BETWEEN 0 AND 9 THEN '0 - 9'
             WHEN fans BETWEEN 10 AND 99 THEN '10 - 99'
             ELSE '100-1000' END AS range,
             review_count, 
             fans
      FROM user) AS subtable
GROUP BY subtable.range
+------------+----------+----------------+----------------+
| fans_range | num_user | avg_num_review |   avg_num_fans |
+------------+----------+----------------+----------------+
| 0 - 9      |     9690 |  15.0085655315 | 0.447265221878 |
| 10 - 99    |      294 |  283.326530612 |  25.5986394558 |
| 100-1000   |       16 |          891.5 |         189.75 |
+------------+----------+----------------+----------------+
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
+------------+------------+
| love_count | hate_count |
+------------+------------+
|       1080 |         82 |
+------------+------------+

	
	SQL code used to arrive at answer:
SELECT
  SUM(CASE WHEN LOWER(text) LIKE '% love %' THEN 1 ELSE 0 END) AS love_count,
  SUM(CASE WHEN LOWER(text) LIKE '% hate %' THEN 1 ELSE 0 END) AS hate_count
FROM review;

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select id,name,fans  from user  order by fans desc limit 10
	
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

I have chosen Toronto city and Food Category
	
i. Do the two groups you chose to analyze have a different distribution of hours?

select case when stars>=4.0 then '4-5'
when stars>=2.0 then '2-3'
else 'below 2' end as 'stars',
count(distinct business.id),
count(hours) as open_days_total,
count(hours)*1.0/count(distinct business.id) as open_days_average
from ((business inner join hours on business.id=hours.business_id)
inner join category on business.id=category.business_id) 
where city='Toronto' and category.category='Food'
group by stars



They have a huge differnce in hours
ii. Do the two groups you chose to analyze have a different number of reviews?


select case when stars>=4.0 then '4-5'
when stars>=2.0 then '2-3'
else 'below 2' end as 'stars',
count(distinct business.id),
count(review_count) as review_count_total,
count(review_count)*1.0/count(distinct business.id) as review_count_average
from (business 
inner join category on business.id=category.business_id) 
where city='Toronto' and category.category='Food'
group by stars

There is an insignificant differnce
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.


SQL code used for analysis:
SELECT CASE WHEN stars >= 4.0 THEN '4-5 stars'
            WHEN stars >= 2.0 THEN '2-3 stars'
            ELSE 'below 2' END AS 'STARS',
       business.neighborhood,
       business.address,
       business.postal_code
FROM business INNER JOIN category ON business.id = category.business_id
WHERE city = 'Toronto' AND category.category ='Food'
ORDER BY STARS

2-3 star rating are given to the locations of southeast and East side

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:Number of business. The number of open-business is bigger than closed one.

ii. Difference 2: Number of review & average of stars. Both of them in the open-business are bigger.
         
        
SQL code used for analysis:
SELECT is_open, 
       count(distinct business.id) num_business, 
       count(distinct review.id) num_review,
       avg(review.stars) avg_stars
FROM business
JOIN review ON business.id =  review.business_id
GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
What is the most successful category of business?
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
Among the categories, I calcalate the average of stars and the proportion of opening on each category. To get statistical reasoning, I only consider the set of category with more than 10 of business.

From the output, we can see that "Local Service", "Health & Medica", "Home Services", "Shopping", and "Beauty & Spas" are successful; they are getting better reviews and higher opening rate. However, "Bars", "Nightlife", and "Restaurants" have lower stars and close frequently.
                           
                  
iii. Output of your finished dataset:
+------------------------+--------------+-----------+------------+
| category               | num_business | avg_stars | avg_isopen |
+------------------------+--------------+-----------+------------+
| Local Services         |           12 |      4.21 |       0.83 |
| Health & Medical       |           17 |      4.09 |       0.94 |
| Home Services          |           16 |       4.0 |       0.94 |
| Shopping               |           30 |      3.98 |       0.83 |
| Beauty & Spas          |           13 |      3.88 |       0.92 |
| American (Traditional) |           11 |      3.82 |       0.73 |
| Food                   |           23 |      3.78 |       0.87 |
| Bars                   |           17 |       3.5 |       0.65 |
| Nightlife              |           20 |      3.48 |        0.6 |
| Restaurants            |           71 |      3.46 |       0.75 |
+------------------------+--------------+-----------+------------+ 
         
iv. Provide the SQL code you used to create your final dataset:
SELECT category.category, 
       count(business.id) num_business, 
       round(avg(business.stars),2) avg_stars, 
       round(avg(business.is_open),2) avg_isopen
FROM (business INNER JOIN category ON business.id = category.business_id)
GROUP BY category.category
HAVING num_business > 10
ORDER BY avg_stars DESC, avg_isopen DESC